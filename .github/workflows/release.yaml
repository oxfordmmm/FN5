name: Build Docker + pypi
#Based on the docker build action for SARS-CoV2_workflows
on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: lhr.ocir.io
  IMAGE_NAME: ${{ secrets.MMM_NAMESPACE }}/gpas/competitivemapping_pipeline
  IMAGE_NAME_GPAS_LTD: ${{ secrets.GPAS_LTD_NAMESPACE }}/oxfordmmm/competitivemapping_pipeline

jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Run unit tests
      run: |
        ./unit_test.sh

  integration-tests:
    name: Run integration tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        sudo apt install g++ python3 python3-pip python3-dev
        python -m venv env
        source env/bin/activate
        pip install pytest
        pip install .

    - name: Compile
      run: |
        ./build.sh

    - name: Run program
      run: |
        ./test/test.sh    

    - name: Test outputs
      run: |
        source env/bin/activate
        python3 -m pytest --exitfirst --verbose

  build-pypi:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        run: |
          sudo apt install g++ python3 python3-pip cmake python3-venv
          python3 -m venv env
          source env/bin/activate
          pip install .
      - name: Install pypa/build
        run: |
          source env/bin/activate
          python -m pip install build

      - name: Build a source tarball
        run: |
          source env/bin/activate
          python -m build --sdist --outdir dist

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  docker_build_push:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    steps:
      - name: Login to OCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.OCR_USERNAME }}
          password: ${{ secrets.OCR_TOKEN }}

      - name: Set full image registry tag
        run: |
          echo "FULL_IMAGE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$REVISION" >> $GITHUB_ENV

      - name: Build and push
        id: build_and_push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: Dockerfile
          tags: |
            ${{ env.FULL_IMAGE_TAG }}

      - name: Login to gpasltd OCIR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.OCR_CONTAINER_USERNAME_GPASLTD }}
          password: ${{ secrets.OCR_CONTAINER_TOKEN_GPASLTD }}

      - name: Set full image registry tag
        run: |
          echo "FULL_IMAGE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_GPAS_LTD }}:$REVISION" >> $GITHUB_ENV

      - name: Build and push
        id: build_and_push_gpas_ltd
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: Dockerfile
          tags: |
            ${{ env.FULL_IMAGE_TAG }}

      - name: Docker digest
        run: echo ${{ steps.build_and_push.outputs.digest }}
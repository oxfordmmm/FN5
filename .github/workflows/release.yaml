name: Build Docker + pypi
#Based on the docker build action for SARS-CoV2_workflows
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Run unit tests
      run: |
        ./unit_test.sh

  integration-tests:
    name: Run integration tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        sudo apt install g++ python3 python3-pip python3-dev
        python -m venv env
        source env/bin/activate
        pip install pytest
        pip install .

    - name: Compile
      run: |
        ./build.sh

    - name: Run program
      run: |
        ./test/test.sh    

    - name: Test outputs
      run: |
        source env/bin/activate
        python3 -m pytest --exitfirst --verbose

  build-docker:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    steps:
      - uses: actions/checkout@v2
      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      -
        name: Login to OCR
        uses: docker/login-action@v3
        with:
          registry: lhr.ocir.io
          username: ${{ secrets.OCR_USERNAME }}
          password: ${{ secrets.OCR_TOKEN }}
      -
        name: Login to GHCR
        uses: docker/login-action@v3 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: environments/Dockerfile
          tags: |
            ghcr.io/oxfordmmm/fn5:latest
            ghcr.io/oxfordmmm/fn5:${{env.RELEASE_VERSION}}
            lhr.ocir.io/${{secrets.OCR_NAMESPACE}}/oxfordmmm/fn5:latest
            lhr.ocir.io/${{secrets.OCR_NAMESPACE}}/oxfordmmm/fn5:${{env.RELEASE_VERSION}}
          push: true
          no-cache: true
      -
        name: Docker digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build-pypi:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        run: |
          sudo apt install g++ python3 python3-pip cmake python3-venv
          python3 -m venv env
          source env/bin/activate
          pip install .
      - name: Install pypa/build
        run: |
          source env/bin/activate
          python -m pip install build

      - name: Build a source tarball
        run: |
          source env/bin/activate
          python -m build --sdist --outdir dist

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}